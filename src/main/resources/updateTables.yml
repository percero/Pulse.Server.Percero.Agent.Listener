# CMS
driverClassName: oracle.jdbc.OracleDriver
jdbcUrl: jdbc:oracle:thin:@//ec2-52-10-55-244.us-west-2.compute.amazonaws.com:1523/dasht
#jdbcUrl: jdbc:oracle:thin:@cvgtest2.cta6j6w4rrxw.us-west-2.rds.amazonaws.com:1521:ORCL
username: PULSEUSER
password: V2PULSEUSER
tableNames:
 - mob_update_table
weight: 0
storedProcedureName: PULSEUSER.UPDATE_TABLE_LOCK_BATCH
storedProcedureDefinition: create or replace PROCEDURE UPDATE_TABLE_LOCK_BATCH (NEW_LOCK_ID IN NUMBER DEFAULT 123456, LOCK_DATE IN VARCHAR2, NUM_TO_LOCK IN NUMBER DEFAULT 1, LOCK_COUNT OUT NUMBER) AS BEGIN update mob_update_table u set u.lock_ID=new_lock_id, u.lock_Date=current_timestamp where (lock_id is null or lock_date < to_date(lock_date,'YYYY-MM-dd HH:mi:ss')) and ROWNUM <= NUM_TO_LOCK; LOCK_COUNT:=sql%rowcount; commit; END UPDATE_TABLE_LOCK_BATCH;
---
# ECOACHING
driverClassName: oracle.jdbc.OracleDriver
jdbcUrl: jdbc:oracle:thin:@//ec2-52-10-55-244.us-west-2.compute.amazonaws.com:1523/edwrt.world
#jdbcUrl: jdbc:oracle:thin:@//cvgoedw1.dcd.convergys.com:1521/edwrt.world
username: PULSEUSER
password: V2PULSEUSER
tableNames:
 - EFCMGR.EFC_UPDATE_TABLE
weight: 1
storedProcedureName: PULSEUSER.UPDATE_TABLE_LOCK_BATCH
storedProcedureDefinition: create or replace PROCEDURE UPDATE_TABLE_LOCK_BATCH (NEW_LOCK_ID IN NUMBER DEFAULT 123456, LOCK_DATE IN VARCHAR2, NUM_TO_LOCK IN NUMBER DEFAULT 1, LOCK_COUNT OUT NUMBER) AS BEGIN update EFCMGR.EFC_UPDATE_TABLE u set u.lock_ID=new_lock_id, u.lock_Date=current_timestamp where (lock_id is null or lock_date < to_date(lock_date,'YYYY-MM-dd HH:mi:ss')) and ROWNUM <= NUM_TO_LOCK; LOCK_COUNT:=sql%rowcount; commit; END UPDATE_TABLE_LOCK_BATCH;---
---
# ESTART
driverClassName: oracle.jdbc.OracleDriver
jdbcUrl: jdbc:oracle:thin:@//ec2-52-10-55-244.us-west-2.compute.amazonaws.com:1524/cybtim.cmg.convergys.com
#jdbcUrl: jdbc:oracle:thin:@//odcpdb01.dcd.convergys.com:1521/cybtim.cmg.convergys.com
username: pulse
password: pulse
tableNames:
 - UPDATE_TABLE
weight: 0
storedProcedureName: pulse.UPDATE_TABLE_LOCK_BATCH
storedProcedureDefinition: create or replace PROCEDURE UPDATE_TABLE_LOCK_BATCH (NEW_LOCK_ID IN NUMBER DEFAULT 123456, LOCK_DATE IN VARCHAR2, NUM_TO_LOCK IN NUMBER DEFAULT 1, LOCK_COUNT OUT NUMBER) AS BEGIN update UPDATE_TABLE u set u.lock_ID=new_lock_id, u.lock_Date=current_timestamp where (lock_id is null or lock_date < to_date(lock_date,'YYYY-MM-dd HH:mi:ss')) and ROWNUM <= NUM_TO_LOCK; LOCK_COUNT:=sql%rowcount; commit; END UPDATE_TABLE_LOCK_BATCH;
